{"version":3,"sources":["components/MessageForm.js","components/UserMessage.js","components/OtherMessage.js","components/ChatFeed.js","components/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","e","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","type","multiple","id","style","display","files","UserMessage","message","attachments","src","file","alt","float","marginRight","color","background","OtherMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","userMessage","people","map","person","i","last_read","Fragment","onClick","localStorage","clear","window","location","reload","title","keys","Object","key","lastMessageKey","width","renderMessages","height","textAlign","marginTop","LoginForm","password","formFields","setFormFields","loading","setLoading","handleChange","name","a","authObject","config","headers","axios","get","setItem","alert","required","disabled","App","getItem","publicKey","userSecret","renderChatFeed","chatAppProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fde8735.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\n\r\nconst MessageForm = (props) => {\r\n  const [value, setValue] = useState('');\r\n  const { chatId, creds } = props;\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n\r\n    isTyping(props, chatId);\r\n  };\r\n\r\n  const handleUpload = (e) => {\r\n    sendMessage(creds, chatId, { files: e.target.files, text: '' });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const text = value.trim();\r\n\r\n    if (text.length !== 0) sendMessage(creds, chatId, { text });\r\n\r\n    setValue('');\r\n  };\r\n\r\n  return (\r\n    <form className='message-form' onSubmit={handleSubmit}>\r\n      <input\r\n        className='message-input'\r\n        placeholder='Send a message...'\r\n        value={value}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n      <label htmlFor='upload-button'>\r\n        <span className='image-button'>\r\n          <i className='fa fa-camera fa-fw picture-icon' />\r\n        </span>\r\n      </label>\r\n      <input\r\n        type='file'\r\n        multiple={false}\r\n        id='upload-button'\r\n        style={{ display: 'none' }}\r\n        onChange={handleUpload}\r\n      />\r\n      <button type='submit' className='send-button'>\r\n        <i className='fa fa-paper-plane fa-fw' />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n","import React from 'react';\r\n\r\nconst UserMessage = (props) => {\r\n  const { message } = props;\r\n\r\n  if (message?.attachments?.length > 0) {\r\n    return (\r\n      <img\r\n        src={message.attachments[0].file}\r\n        alt='message-attachment'\r\n        className='message-image'\r\n        style={{ float: 'right' }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='message'\r\n      style={{\r\n        float: 'right',\r\n        marginRight: 18,\r\n        color: '#fff',\r\n        background: '#3b2a50',\r\n      }}\r\n    >\r\n      {message.text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMessage;\r\n","import React from 'react';\r\n\r\nconst OtherMessage = (props) => {\r\n  const { message, lastMessage } = props;\r\n\r\n  const isFirstMessageByUser =\r\n    !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n  return (\r\n    <div className='message-row'>\r\n      {isFirstMessageByUser && (\r\n        <div\r\n          className='message-avatar'\r\n          style={{ backgroundImage: `url(${message?.sender?.avatar})` }}\r\n        />\r\n      )}\r\n      {message?.attachments?.length > 0 ? (\r\n        <img\r\n          src={message.attachments[0].file}\r\n          alt='message-attachment'\r\n          className='message-image'\r\n          style={{ marginLeft: isFirstMessageByUser ? 4 : 48 }}\r\n        />\r\n      ) : (\r\n        <div\r\n          className='message'\r\n          style={{\r\n            float: 'left',\r\n            background: '#cabcdc',\r\n            marginLeft: isFirstMessageByUser ? 4 : 48,\r\n          }}\r\n        >\r\n          {message.text}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtherMessage;\r\n","import React from 'react';\r\nimport MessageForm from './MessageForm';\r\nimport UserMessage from './UserMessage';\r\nimport OtherMessage from './OtherMessage';\r\n\r\nconst ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props;\r\n\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderReadReceipts = (message, userMessage) => {\r\n    return chat.people.map(\r\n      (person, i) =>\r\n        person.last_read === message.id && (\r\n          <div\r\n            key={`read-${i}`}\r\n            className='read-receipt'\r\n            style={{\r\n              float: userMessage ? 'right' : 'left',\r\n              backgroundImage: `url(${person?.person?.avatar})`,\r\n            }}\r\n          />\r\n        )\r\n    );\r\n  };\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n\r\n    return keys.map((key, i) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = i === 0 ? null : keys[i - 1];\r\n      const userMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        <div key={`msg-${i}`} style={{ width: '100%' }}>\r\n          <div className='message-block'>\r\n            {userMessage ? (\r\n              <UserMessage message={message} />\r\n            ) : (\r\n              <OtherMessage\r\n                message={message}\r\n                lastMessage={messages[lastMessageKey]}\r\n              />\r\n            )}\r\n          </div>\r\n          <div\r\n            className='read-receipts'\r\n            style={{\r\n              marginRight: userMessage ? 18 : 0,\r\n              marginLeft: userMessage ? 0 : 68,\r\n            }}\r\n          >\r\n            {renderReadReceipts(message, userMessage)}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleLogOut = () => {\r\n    localStorage.clear();\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  if (!chat)\r\n    return <p style={{ textAlign: 'center', marginTop: '2rem' }}>Loading...</p>;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className='chat-feed'>\r\n        <div className='chat-title-container'>\r\n          <button className='sign-out-button' onClick={() => handleLogOut()}>\r\n            <i className='fa fa-sign-out-alt fa-fw' />\r\n          </button>\r\n          <div className='chat-title'>{chat.title}</div>\r\n          <div className='chat-subtitle'>\r\n            {chat.people.map((person) => ` ${person.person.username}`)}\r\n          </div>\r\n        </div>\r\n        {renderMessages()}\r\n        <div style={{ height: 30 }} />\r\n        <div className='message-form-container'>\r\n          <MessageForm {...props} chatId={activeChat} />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ChatFeed;\r\n","import axios from 'axios';\r\nimport React, { useState } from 'react';\r\n\r\nconst LoginForm = () => {\r\n  const [formFields, setFormFields] = useState({ username: '', password: '' });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFormFields({\r\n      ...formFields,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const authObject = {\r\n      'Project-ID': '5466c855-7287-4d11-b633-36171ccbcf76',\r\n      'User-Name': formFields.username,\r\n      'User-Secret': formFields.password,\r\n    };\r\n\r\n    const config = {\r\n      headers: authObject,\r\n    };\r\n\r\n    try {\r\n      setLoading(true);\r\n      await axios.get('https://api.chatengine.io/chats', config);\r\n\r\n      localStorage.setItem('username', formFields.username);\r\n      localStorage.setItem('password', formFields.password);\r\n\r\n      window.location.reload();\r\n    } catch (error) {\r\n      alert(`An error occured: ${error}`);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='login-screen'>\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <h1>Chatoo</h1>\r\n        <p>Your online chatting app.</p>\r\n        <input\r\n          type='text'\r\n          name='username'\r\n          placeholder='Username'\r\n          onChange={(e) => handleChange(e)}\r\n          value={formFields.username}\r\n          required\r\n        />\r\n        <input\r\n          type='password'\r\n          name='password'\r\n          placeholder='Password'\r\n          onChange={(e) => handleChange(e)}\r\n          value={formFields.password}\r\n          required\r\n        />\r\n        <button type='submit' disabled={loading}>\r\n          {loading ? `Loading...` : `Log In`}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\nimport './App.css';\nimport { ChatEngine } from 'react-chat-engine';\nimport ChatFeed from './components/ChatFeed';\nimport LoginForm from './components/LoginForm';\n\nconst App = () => {\n  if (!localStorage.getItem('username')) return <LoginForm />;\n\n  return (\n    <React.Fragment>\n      <ChatEngine\n        height={`100vh`}\n        publicKey={`5466c855-7287-4d11-b633-36171ccbcf76`}\n        userName={localStorage.getItem('username')}\n        userSecret={localStorage.getItem('password')}\n        renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}